{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Header/Header.module.css","App.module.css","components/Cards/Card/Card.js","components/Cards/Cards.js","API/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/Header/Header.js","App.js","index.js","components/Cards/Cards.module.css","components/Cards/Card/Card.module.css"],"names":["module","exports","CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","component","Card","xs","md","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Cards","data","confirmed","deaths","recovered","container","spacing","justify","infected","url","fetchData","country","a","countryUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","Header","header","App","state","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de884c8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport styles from './Card.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle}) => {\n    return (\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, className)}>\n                <CardContent>\n                    <Typography color='textSecondary' gutterBottom>\n                        {cardTitle}\n                        </Typography>\n                    <Typography variant='h5' component='h2'>\n                        <CountUp\n                            start={0}\n                            end={value}\n                            duration={2}\n                            separator=','\n                        />\n                    </Typography>\n                    <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant='body2' component='p'>{cardSubtitle}</Typography>\n                </CardContent>\n            </Grid>\n    )\n}\n\nexport default CardComponent;\n","import { Grid } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CardComponent from './Card/Card';\n\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\n    // console.log(confirmed)\n    if (!confirmed) {\n        return 'Loading...'\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <CardComponent\n                    className={styles.infected}\n                    cardTitle=\"Infected\"\n                    value={confirmed.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of active COVID-19 cases\"\n                />\n                <CardComponent\n                    className={styles.recovered}\n                    cardTitle=\"Recovered\"\n                    value={recovered.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of recoveries from COVID-19\"\n                />\n                <CardComponent\n                    className={styles.deaths}\n                    cardTitle=\"Deaths\"\n                    value={deaths.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of deaths caused by COVID-19\"\n                />\n\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let countryUrl = url;\n\n    if(country) {\n        countryUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(countryUrl);\n\n        return { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map(dailyData => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n\n        return modifiedData;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name)\n    } catch (error) {\n        console.log(error)\n    }\n}","import {useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState([{}]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        // console.log(dailyData);\n        fetchAPI();\n    }, [])\n\n    const lineChart = (\n        dailyData.length\n            ? (\n                <Line\n                    data={{\n                        labels: dailyData.map(({ date }) => date),\n                        datasets: [{\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true\n                        }, {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: 'red',\n                            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                            fill: true\n                        }],\n                    }}\n                />\n            ) : null\n    )\n\n    console.log(confirmed, recovered, deaths);\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar\n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgba(0, 0, 255, 0.5)',\n                                'rgba(0, 255, 0, 0.5)',\n                                'rgba(255, 0, 0, 0.5)'\n                            ],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        title: {display: true, text: `Current state in ${country}`}\n                    }}\n                />\n            ) : null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart\n","import { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../API'\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [ fetchedCountries, setFetchedCountries ] = useState([])\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries])\n\n    // console.log(fetchedCountries)\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => (\n                    <option key={i} value={country}>{country}</option>\n                ))}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker\n","import styles from './Header.module.css';\n\nconst Header = () => {\n    return (\n        <header className={styles.header}>\n            COVID TRACKER\n        </header>\n    )\n}\n\nexport default Header;\n","import { Component } from 'react'\nimport { Header, Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css'\nimport { fetchData } from './API'\n\nclass App extends Component {\n  // const [ data, setData ] = useState({});\n  // const [ country, setCountry ] = useState('')\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n  // useEffect(() => {\n  //   const fetchAPI = async (country) => {\n  //     setData(await fetchData(country));\n  //     if(country) {\n  //       setCountry({country})\n  //     }\n  //   }\n  //   fetchAPI();\n  // }, [setCountry])\n\n  handleCountryChange = async (country) => {\n    // fetch data\n    const data = await fetchData(country);\n    // console.log(fetchedData);\n    // set state\n    this.setState({ data, country: country })\n\n  }\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <Header />\n        <CountryPicker handleCountryChange={this.handleCountryChange}  />\n        <Cards data={data} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__LmsGV\"};"],"sourceRoot":""}